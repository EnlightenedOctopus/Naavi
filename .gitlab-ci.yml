image: maven:3-jdk-8 # default container image to use for tasks

# task setting up maven properties
before_script:  
  - echo '<settings
            xmlns="http://maven.apache.org/SETTINGS/1.0.0" 
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
            https://maven.apache.org/xsd/settings-1.0.0.xsd">
              <mirrors>
                  <mirror>               
                    <id>ensisa</id>               
                    <name>Nexus ENSISA</name>               
                    <url>https://nexus.cluster.ensisa.uha.fr/repository/maven-public/</url> 
                    <mirrorOf>*</mirrorOf>
                  </mirror>           
                </mirrors>         
              </settings>' > settings.xml
# Various reusable properties
variables:
  MAVEN_CLI_OPTS: "--batch-mode -s settings.xml -Dmaven.repo.local=libs"
  # Folders to be reused from tasks to tasks

cache:
  paths:    
    - "libs" # jars downloaded and installed by Maven    
    - "**/target" # results of Maven commands
# List of stages
stages:  
  - build  
  - test
  - integration-test
  - deploy

# Task: Compiling
compile:
  stage: build
  script: # many commands can appear here (as an array)
    - mvn $MAVEN_CLI_OPTS clean compile

# Task: testing
test:
  stage: test
  script:    
    - mvn $MAVEN_CLI_OPTS test
  artifacts: # results of the stage
    paths:      
      - "**/target/surefire-reports/*"
    reports:
      junit:        
        - "**/target/surefire-reports/TEST-*.xml"
# Task : integration testing
integration-test:
  services: selenium/standalone-firefox:3.141.59
  stage: integration-test
  script:
    - mvn $MAVEN_CLI_OPTS -f spring-mvc-archetype -Dselenium.remote.browser=firefox verify
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"

deploy-docker:
  stage: deploy
  image: docker:latest # Image containing the Docker cli
  services:
  - name: docker:dind # Adds a running Docker daemon
    command: ["--registry-mirror=https://docker.cluster.ensisa.uha.fr"]
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - WARFILE=$(find . -name '*.war' -path '*/target/*' -print0)
    # Check https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - IMG_NAME="registry.cluster.ensisa.uha.fr/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    - docker pull -q jetty:9-jdk8-slim
    - |
        echo "FROM jetty:9-jdk8-slim
        EXPOSE 8080
        ADD $WARFILE \${JETTY_BASE}/webapps/${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}.war
        " > Dockerfile
    - cat Dockerfile
    - docker build -t $IMG_NAME .
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} registry.cluster.ensisa.uha.fr
    - docker push $IMG_NAME